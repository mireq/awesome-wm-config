#!/usr/bin/env python3
# -*- coding: utf-8 -*-

# Inspiration: https://github.com/KDE/plasma-workspace/blob/Plasma/5.24/kcms/cursortheme/xcursor/xcursortheme.cpp

import argparse
import ctypes
import sys


c_Cursor = ctypes.c_ulong
libX11 = ctypes.cdll.LoadLibrary('libX11.so')
libXfixes = ctypes.cdll.LoadLibrary('libXfixes.so')
try:
	libXcursor = ctypes.cdll.LoadLibrary('libXcursor.so')
except OSError:
	libXcursor = ctypes.cdll.LoadLibrary('libXcursor.so.1')
p_Display = ctypes.POINTER(ctypes.c_int)
p_XcursorImages = ctypes.POINTER(ctypes.c_int)
XOpenDisplay = libX11.XOpenDisplay
XOpenDisplay.argtypes = [ctypes.c_char_p]
XOpenDisplay.restype = p_Display
XcursorLibraryLoadImages = libXcursor.XcursorLibraryLoadImages
XcursorLibraryLoadImages.argtypes = [ctypes.c_char_p, ctypes.c_char_p, ctypes.c_int]
XcursorLibraryLoadImages.restype = p_XcursorImages
XcursorImagesLoadCursor = libXcursor.XcursorImagesLoadCursor
XcursorImagesLoadCursor.argtypes = [p_Display, p_XcursorImages]
XcursorImagesLoadCursor.restype = c_Cursor
XFixesSetCursorName = libXfixes.XFixesSetCursorName
XFixesSetCursorName.argtypes = [p_Display, c_Cursor, ctypes.c_char_p]
XFixesChangeCursorByName = libXfixes.XFixesChangeCursorByName
XFixesChangeCursorByName.argtypes = [p_Display, c_Cursor, ctypes.c_char_p]
XFreeCursor = libX11.XFreeCursor
XFreeCursor.argtypes = [p_Display, c_Cursor]
XFreeCursor.restype = ctypes.c_int


class Cursor(object):
	def __init__(self, names):
		self.names = names
		self.images = None

	def __repr__(self):
		return f'{self.__class__.__name__}({self.names})'


def load_cursors():
	cursor_name_list = """
		left_ptr
		up_arrow center_ptr
		cross crosshair
		wait watch
		left_ptr_watch 3ecb610c1bf2410f44200f48c40d3599
		ibeam xterm
		size_ver 00008160000006810000408080010102
		size_hor 028006030e0e7ebffc7f7070c0600140
		size_bdiag fcf1c3c7cd4491d801f1e1c78f100000
		size_fdiag c7088f0f3e6c8088236ef8e1e3e70000
		size_all fleur
		split_v 2870a09082c103050810ffdffffe0204
		split_h 14fef782d02440884392942c11205230
		pointing_hand hand2
		openhand 9141b49c8149039304290b508d208c40
		closedhand 05e88622050804100c20044008402080
		forbidden 03b6e0fcb3499374a867c041f52298f0
		whats_this d9ce0ab605698f320427677b458ad60b
		copy
		move
		link
		X_cursor
		right_ptr
		hand1
		hand2 e29285e634086352946a0e7090d73106
		watch
		xterm
		crosshair
		left_ptr_watch
		center_ptr
		sb_h_double_arrow
		sb_v_double_arrow
		fleur
		top_left_corner
		top_side
		top_right_corner
		right_side
		bottom_right_corner
		bottom_side
		bottom_left_corner
		left_side
		question_arrow
		pirate
		arrow
		text
		alias
		all-scroll
		arrow
		a2a266d0498c3104214a47bd64ab0fc8
		based_arrow_down
		based_arrow_up
		bd_double_arrow
		bottom_left_corner
		bottom_right_corner
		bottom_side
		bottom_tee
		b66166c04f8c3109214a4fbd64a50fc8
		cell
		center_ptr
		circle
		clock
		closedhand
		color-picker
		col-resize
		context-menu
		copy
		cross
		crossed_circle
		crosshair
		cross_reverse
		c07385c7190e701020ff7ffffd08103c
		c7088f0f3e6c8088236ef8e1e3e70000
		default
		diamond_cross
		dnd-ask
		dnd-copy
		dnd-link
		dnd-move
		dnd-no-drop
		dnd-none
		dot
		dotbox
		dot_box_mask
		double_arrow
		down-arrow
		down_arrow
		draft
		draped_box
		d9ce0ab605698f320427677b458ad60b
		e-resize
		ew-resize
		e29285e634086352946a0e7090d73106
		fcf1c3c7cd4491d801f1e1c78f100000
		fcf21c00b30f7e3f83fe0dfd12e71cff
		fd_double_arrow
		fleur
		forbidden
		f41c0e382c94c0958e07017e42b00462
		f41c0e382c97c0938e07017e42800402
		grab
		grabbing
		gumby
		half-busy
		hand
		hand1
		hand2
		h_double_arrow
		help
		ibeam
		icon
		kill
		left-arrow
		left_arrow
		left_ptr
		left_ptr_watch
		left_side
		left_tee
		link
		ll_angle
		lr_angle
		move
		ne-resize
		nesw-resize
		no-drop
		not-allowed
		n-resize
		ns-resize
		nw-resize
		nwse-resize
		openhand
		pencil
		pirate
		plus
		pointer
		pointer-move
		pointing_hand
		progress
		question_arrow
		right-arrow
		right_arrow
		right_ptr
		right_side
		right_tee
		row-resize
		sb_down_arrow
		sb_h_double_arrow
		sb_left_arrow
		sb_right_arrow
		sb_up_arrow
		sb_v_double_arrow
		se-resize
		size_all
		size-bdiag
		size_bdiag
		size-fdiag
		size_fdiag
		size-hor
		size_hor
		size-ver
		size_ver
		split_h
		split_v
		s-resize
		sw-resize
		target
		tcross
		text
		top_left_arrow
		top_left_corner
		top_right_arrow
		top_right_corner
		top_side
		top_tee
		ul_angle
		up-arrow
		up_arrow
		ur_angle
		v_double_arrow
		vertical-text
		wait
		watch
		wayland-cursor
		whats_this
		w-resize
		x-cursor
		X_cursor
		xterm
		zoom-in
		zoom_in
		zoom-out
		zoom_out
		00000000000000020006000e7e9ffc3f
		00008160000006810000408080010102
		028006030e0e7ebffc7f7070c0600140
		03b6e0fcb3499374a867c041f52298f0
		03b6e0fcb3499374a867d041f52298f0
		0426c94ea35c87780ff01dc239897213
		043a9f68147c53184671403ffa811cc5
		048008013003cff3c00c801001200000
		08e8e1c95fe2fc01f976f1e063a24ccd
		08ffe1cb5fe6fc01f906f1c063814ccf
		08ffe1e65f80fcfdf9fff11263e74c48
		0876e1c15ff2fc01f906f1c363074c0f
		1081e37283d90000800003c07f3ef6bf
		14fef782d02440884392942c11205230
		208530c400c041818281048008011002
		2870a09082c103050810ffdffffe0204
		3ecb610c1bf2410f44200f48c40d3599
		3085a0e285430894940527032f8b26df
		38c5dff7c7b8962045400281044508d2
		4498f0e0c1937ffe01fd06f973665830
		5aca4d189052212118709018842178c0
		5c6cd98b3f3ebcb1f9c7f1c204630408
		50585d75b494802d0151028115016902
		640fb0e74195791501fd1ed57b41487f
		6407b0e94181790501fd1e167b474872
		9d800788f1b08800ae810202380a0822
		9081237383d90e509aa00f00170e968f
		9116a3ea924ed2162ecab71ba103b17f
	"""
	return [Cursor(line.strip().split()) for line in cursor_name_list.splitlines() if line.strip()]


CURSORS = load_cursors()


def load_images(display, theme, size, cursor_name):
	images = XcursorLibraryLoadImages(cursor_name.encode('utf-8'), theme.encode('utf-8'), size)
	if images:
		return images


def change_cursor(display, cursor_name, images):
	cursor = XcursorImagesLoadCursor(display, images)
	XFixesSetCursorName(display, cursor, cursor_name.encode('utf-8'))
	XFixesChangeCursorByName(display, cursor, cursor_name.encode('utf-8'))
	XFreeCursor(display, cursor)


def set_cursor_theme(display, theme, size):
	for cursor in CURSORS:
		if cursor.images is None:
			for cursor_name in cursor.names:
				cursor.images = load_images(display, theme, size, cursor_name)
				if cursor.images is not None:
					break
		if cursor.images:
			for cursor_name in cursor.names:
				change_cursor(display, cursor_name, cursor.images)


def main():
	parser = argparse.ArgumentParser(description="Set cursor theme")
	parser.add_argument('theme', help="Cursor theme")
	parser.add_argument('size', nargs='?', type=int, help="Cursor size", default=0)

	args = parser.parse_args()

	display = XOpenDisplay(None)
	if not display:
		sys.stderr.write("Display cannot be opened")
		sys.exit(-1)

	set_cursor_theme(display, args.theme, args.size)



if __name__ == "__main__":
	main()
